{"version":3,"sources":["ListItem.js","AddItem.js","List.js","Lists.js","AddList.js","App.js","index.js"],"names":["ListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","state","color","newColor","setState","_this2","name","item","react_default","a","createElement","onClick","style","Component","AddItem","handleSubmit","newItem","e","preventDefault","addItem","idName","divName","className","ref","onSubmit","id","type","value","uuidv4","require","List","items","key","map","src_ListItem","src_AddItem","Lists","lists","length","listName","src_List","AddList","addList","App","s","newListItem","target","newLists","slice","newItems","assign","defineProperty","push","newItemsList","console","log","src_AddList","handleAddList","src_Lists","handleAddItem","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4a86caf7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ListItem extends Component {\n\n    constructor(props) {\n      super(props);\n      this.handleClick = this.handleClick.bind(this)\n      this.state = { color: 'black' };\n    }\n\n    handleClick() {\n      const newColor = this.state.color === 'black' ? 'gray' : 'black';\n\n      this.setState({\n        color: newColor\n      })\n    }\n\n  render() {\n    var item = this.props.item;\n    var name = item.name;\n    return (\n      <span onClick={ () => this.handleClick() } style={{color: this.state.color}}>\n        <strong>{name}</strong>\n      </span>\n    );\n\n  }\n\n}\nexport default ListItem;\n\n","import React, { Component } from 'react';\n\nclass AddItem extends Component {\n\n  constructor() {\n    super();\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      newItem:{}\n    }\n  }\n\n  handleSubmit(e) {\n      e.preventDefault(); // this prevents the page from reloading -- do not delete this line!\n      this.props.addItem(e, this.props.idName);\n  }\n    \n\n  render() {\n    \n    var divName = 'add' + this.props.idName;\n\n    return (\n      <div className='addItemDiv'>\n        <h4>Add {this.props.idName}</h4>\n        <form ref='form' onSubmit={ (e) => this.handleSubmit(e) }>\n          <div id={divName} ref={divName}>\n            <label>Name</label><br />\n            <input type='text' ref='id' />\n          </div><br />\n          <input type='submit' value='Submit' /><br />\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default AddItem;\n","import React, { Component } from 'react';\nimport ListItem from './ListItem.js';\nimport AddItem from './AddItem.js';\nconst uuidv4 = require('uuid');\n\nclass List extends Component {\n\n  render() {\n    var name = this.props.name;\n    var items = this.props.items;\n\n    if (items) {\n      return (\n        <div id={name} key={uuidv4()}>\n          <h3>{name} List</h3>\n\t        <ul>\n            {items.map(function(item) {\n              return (\n                <li className='list-item' key={uuidv4()}><ListItem item={item} key={uuidv4()} /></li>\n              )\n            })}\n\t        </ul>\n          <AddItem idName={name} addItem={this.props.addItem.bind(this)} />\n        </div>\n      )\n    }\n    return (\n      <div id={name} key={uuidv4()}>\n        <h3>{name} List</h3>\n        <AddItem idName={name} addItem={this.props.addItem.bind(this)} />\n      </div>\n    )\n\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport List from './List.js';\nconst uuidv4 = require('uuid');\n\nclass Lists extends Component {\n\n  render() {\n    // If there are no lists, display a relevant message\n    if(this.props.lists.length === 0) {\n      return (\n        <div id=\"listsDiv\" className=\"List\">\n          <h2>Add new lists to get started!</h2>\n        </div>\n      );\n    }\n\n    // Otherwise, for each list, create a div\n    var items = this.props.items;\n    var lists = this.props.lists;\n    var addItem = this.props.addItem;\n\n    return (\n      <div key={uuidv4()}>\n        {lists.map(function(listName) {\n          return (\n            <List name={listName} items={items[listName]} addItem={addItem.bind(this)} key={uuidv4()} />\n          )\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Lists;\n","import React, { Component } from 'react';\n\nclass AddList extends Component {\n\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n      e.preventDefault(); // this prevents the page from reloading -- do not delete this line!\n      this.props.addList(e);  \n  }\n\n  render() {\n\n    return (\n      <div id=\"addListDiv\">\n        <form onSubmit={ (e) => this.handleSubmit(e) }>\n          <div id='addList'>\n            <label>What will be on your next list?&nbsp;\n              <input type='text' ref='id' id='newID'></input>\n            </label>\n          </div><br />\n          <input type='submit' value='Create List' />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddList;\n","import React, { Component } from 'react';\nimport Lists from './Lists.js';\nimport AddList from './AddList.js';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n\t    lists: [], // this holds the name of each list\n\t    items: {} // this property names of this object are the names of the lists; their values are arrays of the items in each list\n    };\n  }\n\n  /**\n   * This function takes the state of an AddList component as its parameter\n   * and updates the state of this App component by adding a new entry to the \"lists\"\n   * array and then adding a new property in the \"items\" object that has the same name\n   * as the value put into the \"lists\" array. It should then re-render this App component.\n   */\n  handleAddList(s) {\n\n      const newListItem = s.target[0].value;\n\n      let newLists = this.state.lists.slice(0); \n      let newItems = Object.assign({}, this.state.items, { [newListItem]: []});\n      newLists.push(newListItem);\n\n      this.setState({\n        lists: newLists,\n        items: newItems\n      })\n  }\n\n  /**\n   * This function takes the state of an AddItem component as its parameter\n   * and updates the state of this App component by adding a new value to the \n   * appropriate array in the \"items\" property of the state. Keep in mind that\n   * the property names of \"items\" are the names of each list, which is mapped\n   * to an array of the items in that list. After updating the \"items\" part of \n   * the state, this function  should then re-render this App component.\n   */\n  handleAddItem(s, id) {\n    const item = s.target[0].value;\n    let newItemsList = this.state.items[id]\n    newItemsList.push({ name: item})\n    let newItems = Object.assign({}, this.state.items, { [id]: newItemsList });\n    console.log(newItems)\n    this.setState({\n      items: newItems\n    })\n  }\n\n  /**\n   * Renders the component.\n   */\n  render() {\n    return (\n      <div className=\"App\">\n        <AddList addList={this.handleAddList.bind(this)} />\n        <div id=\"listsDiv\" className=\"List\">\n          <Lists lists={this.state.lists} items={this.state.items} addItem={this.handleAddItem.bind(this)}/>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}